procedure main() -> (main/RET_VAL : Bv32)
{
    var main/RET_VAL : Bv32
    var main/limit : Bv32

    loc $0 entry 
    loc $1 final 
    loc $2
    loc $3
    loc $4
    loc $5
    loc $6

    transition $0 -> $2
        assume true
    {
    };

    transition $2 -> $3
        assume true
    {
        main/limit := undef;
    };

    transition $3 -> $6
        assume true
        call main/loop.header(0bv32, main/limit);

    transition $6 -> $4
        assume true
    {
    };

    transition $4 -> $5
        assume true
    {
    };

    transition $5 -> $1
        assume true
    {
        main/RET_VAL := 0bv32;
    };

}
procedure main/loop.header(main/loop.header/i : Bv32, main/loop.header/limit : Bv32) -> ()
{
    var main/loop.header/i1 : Bv32
    var main/loop.header/cond : Bool

    loc $0 entry 
    loc $1 final 
    loc $2
    loc $3

    transition $0 -> $2
        assume true
    {
    };

    transition $2 -> $3
        assume true
    {
        main/loop.header/i1 := main/loop.header/i + 1bv32;
        main/loop.header/cond := slt(main/loop.header/i1,main/loop.header/limit);
    };

    transition $3 -> $1
        assume main/loop.header/cond
        call main/loop.header(main/loop.header/i1, main/loop.header/limit);

    transition $3 -> $1
        assume not main/loop.header/cond
    {
    };

}
